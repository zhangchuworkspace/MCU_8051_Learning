C51 COMPILER V9.60.0.0   DS1302                                                            05/04/2024 17:53:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS
                    -1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit DS1302_SCLK=P3^6;
   4          sbit DS1302_IO=P3^4;
   5          sbit DS1302_CE=P3^5;
   6          
   7          unsigned char DS1302_Time[]={24,5,4,17,03,05,6};
   8          
   9          #define DS1302_SECOND   0x80
  10          #define DS1302_MINUTE   0x82
  11          #define DS1302_HOUR     0x84
  12          #define DS1302_DATE     0x86
  13          #define DS1302_MONTH    0x88
  14          #define DS1302_DAY      0x8A
  15          #define DS1302_YEAR     0x8C
  16          #define DS1302_WP       0x8E
  17          
  18          void DS1302_Init(void)
  19          {
  20   1        DS1302_CE=0;
  21   1        DS1302_SCLK=0;
  22   1      }
  23          
  24          void DS1302_WriteByte(unsigned char Command,Data)
  25          {
  26   1        unsigned char i;
  27   1        DS1302_CE=1;
  28   1        for(i=0;i<8;i++){
  29   2          DS1302_IO=Command&(0x01<<i);
  30   2          DS1302_SCLK=1;
  31   2          DS1302_SCLK=0;
  32   2        }
  33   1        
  34   1        for(i=0;i<8;i++){
  35   2          DS1302_IO=Data&(0x01<<i);
  36   2          DS1302_SCLK=1;
  37   2          DS1302_SCLK=0;
  38   2        }
  39   1        DS1302_CE=0;
  40   1      }
  41          
  42          unsigned char DS1302_ReadByte(unsigned char Command)
  43          {
  44   1        unsigned char i,Data=0x00;
  45   1        DS1302_CE=1;
  46   1        Command|=0x01;
  47   1        for(i=0;i<8;i++){
  48   2          DS1302_IO=Command&(0x01<<i);
  49   2          DS1302_SCLK=0;
  50   2          DS1302_SCLK=1;
  51   2        }
  52   1        for(i=0;i<8;i++){
  53   2          DS1302_SCLK=1;
  54   2          DS1302_SCLK=0;
C51 COMPILER V9.60.0.0   DS1302                                                            05/04/2024 17:53:00 PAGE 2   

  55   2          if(DS1302_IO){Data|=(0x01<<i);}
  56   2        }
  57   1        DS1302_CE=0;
  58   1        DS1302_IO=0;
  59   1        return Data;
  60   1      }
  61          
  62          void DS1302_SetTime(void)
  63          {
  64   1        DS1302_WriteByte(DS1302_WP,0x00);
  65   1        DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0]/10*16+DS1302_Time[0]%10);
  66   1        DS1302_WriteByte(DS1302_MONTH,DS1302_Time[1]/10*16+DS1302_Time[1]%10);
  67   1        DS1302_WriteByte(DS1302_DATE,DS1302_Time[2]/10*16+DS1302_Time[2]%10);
  68   1        DS1302_WriteByte(DS1302_HOUR,DS1302_Time[3]/10*16+DS1302_Time[3]%10);
  69   1        DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[4]/10*16+DS1302_Time[4]%10);
  70   1        DS1302_WriteByte(DS1302_SECOND,DS1302_Time[5]/10*16+DS1302_Time[5]%10);
  71   1        DS1302_WriteByte(DS1302_DAY,DS1302_Time[6]/10*16+DS1302_Time[6]%10);
  72   1        DS1302_WriteByte(DS1302_WP,0x80);
  73   1      }
  74          
  75          void DS1302_ReadTime(void)
  76          {
  77   1        unsigned char Temp;
  78   1        Temp=DS1302_ReadByte(DS1302_YEAR);
  79   1        DS1302_Time[0]=Temp/16*10+Temp%16;
  80   1        Temp=DS1302_ReadByte(DS1302_MONTH);
  81   1        DS1302_Time[1]=Temp/16*10+Temp%16;
  82   1        Temp=DS1302_ReadByte(DS1302_DATE);
  83   1        DS1302_Time[2]=Temp/16*10+Temp%16;
  84   1        Temp=DS1302_ReadByte(DS1302_HOUR);
  85   1        DS1302_Time[3]=Temp/16*10+Temp%16;
  86   1        Temp=DS1302_ReadByte(DS1302_MINUTE);
  87   1        DS1302_Time[4]=Temp/16*10+Temp%16;
  88   1        Temp=DS1302_ReadByte(DS1302_SECOND);
  89   1        DS1302_Time[5]=Temp/16*10+Temp%16;
  90   1        Temp=DS1302_ReadByte(DS1302_DAY);
  91   1        DS1302_Time[6]=Temp/16*10+Temp%16;
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    587    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
